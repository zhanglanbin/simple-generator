package ${generator.daoPackagePath};

import java.util.List;

import org.apache.ibatis.annotations.Param;

import ${generator.modelPackage};

import ${generator.modelQueryPackage};

/**
 * @Title: ${generator.daoClassName}
 * @Description: ${generator.explain}
 * @author: ${generator.author}
 * @date: ${generator.date}
 * */
public interface ${generator.daoClassName} {

	public int insert(${generator.modelClassName} ${generator.modelVariableName});

	public int insertDynamic(${generator.modelClassName} ${generator.modelVariableName});

	public int insertBatch(@Param("${generator.modelListVariableName}") List<${generator.modelClassName}> ${generator.modelListVariableName});

	public int deleteBy${generator.modelPrimaryKeyMethodName}(${generator.modelPrimaryKeyJavaType} ${generator.modelPrimaryKey});

	public int deleteBy${generator.modelPrimaryKeyListMethodName}(@Param("${generator.modelPrimaryKeyVariableList}") List<${generator.modelPrimaryKeyJavaType}> ${generator.modelPrimaryKeyVariableList});

	public int updateBy${generator.modelPrimaryKeyMethodName}(${generator.modelClassName} ${generator.modelVariableName});

	public int updateBy${generator.modelPrimaryKeyListMethodName}(@Param("${generator.modelListVariableName}") List<${generator.modelClassName}> ${generator.modelListVariableName});

	public ${generator.modelClassName} findBy${generator.modelPrimaryKeyMethodName}(${generator.modelPrimaryKeyJavaType} ${generator.modelPrimaryKey});

	public List<${generator.modelClassName}> findBy${generator.modelPrimaryKeyListMethodName}(@Param("${generator.modelPrimaryKeyVariableList}") List<${generator.modelPrimaryKeyJavaType}> ${generator.modelPrimaryKeyVariableList});

	public int findTotalRow(${generator.modelQueryClassName} ${generator.modelQueryVariableName});

	public List<${generator.modelClassName}> findList(${generator.modelQueryClassName} ${generator.modelQueryVariableName});

	public List<${generator.modelClassName}> findListByDynamicColumn(${generator.modelQueryClassName} ${generator.modelQueryVariableName});
}